name: 01 - Build and Tag

on:
  # This runs on every push to the main branch
  push:
    branches:
      - main
      
jobs:
  tagging:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create and push the new tag
    
    outputs:
      new_tag: ${{ steps.tagger.outputs.new_tag }}
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # IMPORTANT: Needs full history to calculate the version
          
      - name: Calculate and Create Tag
        id: tagger
        uses: anothrNick/github-tag-action@1.70.0 # A popular semantic versioning tag action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # You can customize the commit message format it looks for
          # DEFAULT_BUMP: patch
          # WITH_V: true # adds 'v' prefix
          
      - name: Log New Tag
        run: echo "Generated Tag: ${{ steps.tagger.outputs.new_tag }}"
        
      # --- Next step: Run the Release Workflow ---
      # This step triggers the second workflow if a new tag was created.
      - name: Trigger Release Workflow
        if: steps.tagger.outputs.new_tag != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const newTag = process.env.NEW_TAG;
            
            if (newTag) {
              console.log(`Dispatching release workflow for tag: ${newTag}`);
              
              // This triggers the second workflow (02-release.yml)
              // The 'client_payload' passes the new tag name
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'release.yml', # Must match the filename of your second workflow
                ref: 'main', # The branch to run the workflow on
                client_payload: {
                  tag: newTag
                }
              });
            }
        env:
          NEW_TAG: ${{ steps.tagger.outputs.new_tag }}